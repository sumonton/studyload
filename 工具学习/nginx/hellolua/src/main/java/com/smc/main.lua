---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by smc.
--- DateTime: 2022/8/27 00:28
---
local headers = ngx.req.get_headers()

ngx.say("Host:",headers["Host"],"<br/>")

ngx.say("user-agent:",headers["user-agent"],"<br/>")

ngx.say("user-agent:",headers.user_agent,"<br/>")

for k, v in ipairs(headers) do
    if type(v) == "headers" then
        ngx.say(k," : ",table.concat(v,",") ,"<br/>")
    else
        ngx.say(k," : ",v,"<br/>")
    end
end

ngx.req.read_body()

ngx.say("post args begin","<br/>")

local post_args = ngx.req.get_post_args()

for k, v in pairs(post_args) do
    if type(v) == "table" then
        ngx.say(k, " : ",table.concat(v,", "),"<br/>")
    else
        ngx.say(k, " : ",v,"<br/>")
    end
end

ngx.say("ngx.req.http_version:",ngx.req.http_version(),"<br/>")

ngx.say("ngx.req.get_method:",ngx.req.get_method(),"<br/>")

local shared_data = ngx.shared.shared_data

local i = shared_data:get("i")

if not i then
    i=1
    shared_data:set("i",1)
    ngx.say("lazy set i ",i,"<br/>")
end

i= shared_data:incr("i",i)
ngx.say("i=",i,"<br/>")

local _M = {}

local lrucache = require "resty.lrucache"

local c, err = lrucache.new(200)  -- allow up to 200 items in the cache
ngx.say("count=init")

if not c then
    error("failed to create the cache: " .. (err or "unknown"))
end

function _M.go()
    count = c:get("count")
    c:set("count", 100)
    ngx.say("count=",count, "<br/>")
    ngx.say("cat: ", c:get("cat"))
    if not count then
        c:set("count",1)
        ngx.say("lazy set count",c:get("count"),"<br/>")

    else
        c:set("count",count+1)
        ngx.say("count=",count,"<br/>")
    end
end

return _M


